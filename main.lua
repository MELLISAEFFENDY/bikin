-- modern_autofish.lua
-- Modern UI + Dual-mode AutoFishing (combines ideas from old.lua and new.lua)
-- Drop this script into a LocalScript environment in Roblox (e.g. StarterPlayerScripts)
-- Author: autogenerated helper

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local StarterGui = game:GetService("StarterGui")

local function BuildUI()
    local playerGui = LocalPlayer:WaitForChild("PlayerGui")
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "ModernAutoFishUI"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = playerGui

    local panel = Instance.new("Frame")
    panel.Name = "Panel"
    panel.Size = UDim2.new(0, 380, 0, 200)
    panel.Position = UDim2.new(0, 18, 0, 70)
    panel.BackgroundColor3 = Color3.fromRGB(28,28,34)
    panel.BorderSizePixel = 0
    panel.Parent = screenGui

    local panelCorner = Instance.new("UICorner") panelCorner.Parent = panel
    local panelStroke = Instance.new("UIStroke") panelStroke.Thickness = 1 panelStroke.Color = Color3.fromRGB(40,40,48) panelStroke.Parent = panel

    -- Header
    local header = Instance.new("Frame") header.Parent = panel
    header.Size = UDim2.new(1, 0, 0, 40)
    header.Position = UDim2.new(0, 0, 0, 0)
    header.BackgroundTransparency = 1

    -- Enable header to receive input for dragging
    header.Active = true
    header.Selectable = true

    -- Drag support variables
    local dragging = false
    local dragStart = Vector2.new(0,0)
    local startPos = Vector2.new(0,0)
    local dragInput = nil

    local function updateDrag(input)
        if not dragging then return end
        local delta = input.Position - dragStart
        panel.Position = UDim2.new(0, startPos.X + delta.X, 0, startPos.Y + delta.Y)
    end

    header.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = panel.AbsolutePosition
            dragInput = input
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    header.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            updateDrag(input)
        end
    end)

    -- Also track global input changed for smoother movement (when using UserInputService)
    local UIS = game:GetService("UserInputService")
    UIS.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            updateDrag(input)
        end
    end)

    local title = Instance.new("TextLabel")
    title.Parent = header
    title.Size = UDim2.new(1, -20, 1, 0)
    title.Position = UDim2.new(0, 10, 0, 6)
    title.BackgroundTransparency = 1
    title.Text = "Modern AutoFish"
    title.Font = Enum.Font.GothamBold
    title.TextSize = 18
    title.TextColor3 = Color3.fromRGB(235,235,235)
    title.TextXAlignment = Enum.TextXAlignment.Left

    -- Minimize and Close buttons in header
    local btnContainer = Instance.new("Frame") btnContainer.Parent = header
    btnContainer.Size = UDim2.new(0, 80, 1, 0)
    btnContainer.Position = UDim2.new(1, -90, 0, 0)
    btnContainer.BackgroundTransparency = 1

    local minimizeBtn = Instance.new("TextButton") minimizeBtn.Parent = btnContainer
    minimizeBtn.Size = UDim2.new(0, 36, 0, 24)
    minimizeBtn.Position = UDim2.new(0, 0, 0.5, -12)
    minimizeBtn.Text = "_"
    minimizeBtn.Font = Enum.Font.GothamBold
    minimizeBtn.TextSize = 18
    minimizeBtn.BackgroundColor3 = Color3.fromRGB(60,60,66)
    minimizeBtn.TextColor3 = Color3.fromRGB(230,230,230)
    local minCorner = Instance.new("UICorner") minCorner.Parent = minimizeBtn

    local closeBtn = Instance.new("TextButton") closeBtn.Parent = btnContainer
    closeBtn.Size = UDim2.new(0, 36, 0, 24)
    closeBtn.Position = UDim2.new(1, -36, 0.5, -12)
    closeBtn.AnchorPoint = Vector2.new(1,0)
    closeBtn.Text = "X"
    closeBtn.Font = Enum.Font.GothamBold
    closeBtn.TextSize = 16
    closeBtn.BackgroundColor3 = Color3.fromRGB(160,60,60)
    closeBtn.TextColor3 = Color3.fromRGB(255,255,255)
    local closeCorner = Instance.new("UICorner") closeCorner.Parent = closeBtn

    -- Main content container
    local content = Instance.new("Frame") content.Parent = panel
    content.Size = UDim2.new(1, -20, 1, -60)
    content.Position = UDim2.new(0, 10, 0, 44)
    content.BackgroundTransparency = 1

    local leftCol = Instance.new("Frame") leftCol.Parent = content
    leftCol.Size = UDim2.new(0.5, -6, 1, 0)
    leftCol.Position = UDim2.new(0, 0, 0, 0)
    leftCol.BackgroundTransparency = 1

    local rightCol = Instance.new("Frame") rightCol.Parent = content
    rightCol.Size = UDim2.new(0.5, -6, 1, 0)
    rightCol.Position = UDim2.new(0.5, 12, 0, 0)
    rightCol.BackgroundTransparency = 1

    -- Mode controls (left)
    local modeLabel = Instance.new("TextLabel") modeLabel.Parent = leftCol
    modeLabel.Size = UDim2.new(1, 0, 0, 18)
    modeLabel.Position = UDim2.new(0, 0, 0, 0)
    modeLabel.BackgroundTransparency = 1
    modeLabel.Text = "Mode"
    modeLabel.Font = Enum.Font.GothamSemibold
    modeLabel.TextSize = 13
    modeLabel.TextColor3 = Color3.fromRGB(200,200,200)
    modeLabel.TextXAlignment = Enum.TextXAlignment.Left

    local modeButtons = Instance.new("Frame") modeButtons.Parent = leftCol
    modeButtons.Size = UDim2.new(1, 0, 0, 70)
    modeButtons.Position = UDim2.new(0, 0, 0, 22)
    modeButtons.BackgroundTransparency = 1

    local fastButton = Instance.new("TextButton") fastButton.Parent = modeButtons
    fastButton.Size = UDim2.new(0.48, 0, 0, 34)
    fastButton.Position = UDim2.new(0, 0, 0, 0)
    fastButton.Text = "Fast"
    fastButton.Font = Enum.Font.Gotham
    fastButton.TextSize = 14
    fastButton.BackgroundColor3 = Color3.fromRGB(75,95,165)
    fastButton.TextColor3 = Color3.fromRGB(255,255,255)
    local fastCorner = Instance.new("UICorner") fastCorner.Parent = fastButton

    local secureButton = Instance.new("TextButton") secureButton.Parent = modeButtons
    secureButton.Size = UDim2.new(0.48, 0, 0, 34)
    secureButton.Position = UDim2.new(0.52, 0, 0, 0)
    secureButton.Text = "Secure"
    secureButton.Font = Enum.Font.Gotham
    secureButton.TextSize = 14
    secureButton.BackgroundColor3 = Color3.fromRGB(74,155,88)
    secureButton.TextColor3 = Color3.fromRGB(255,255,255)
    local secureCorner = Instance.new("UICorner") secureCorner.Parent = secureButton

    -- Right column: numeric controls
    local delayLabel = Instance.new("TextLabel") delayLabel.Parent = rightCol
    delayLabel.Size = UDim2.new(1, 0, 0, 18)
    delayLabel.Position = UDim2.new(0, 0, 0, 0)
    delayLabel.BackgroundTransparency = 1
    delayLabel.Text = string.format("Recast Delay: %.2fs", Config.autoRecastDelay)
    delayLabel.Font = Enum.Font.GothamSemibold
    delayLabel.TextSize = 13
    delayLabel.TextColor3 = Color3.fromRGB(200,200,200)
    delayLabel.TextXAlignment = Enum.TextXAlignment.Left

    local delayControls = Instance.new("Frame") delayControls.Parent = rightCol
    delayControls.Size = UDim2.new(1, 0, 0, 28)
    delayControls.Position = UDim2.new(0, 0, 0, 22)
    delayControls.BackgroundTransparency = 1

    local delayMinus = Instance.new("TextButton") delayMinus.Parent = delayControls
    delayMinus.Size = UDim2.new(0, 0, 1, 0)
    delayMinus.Size = UDim2.new(0, 32, 1, 0)
    delayMinus.Position = UDim2.new(0, 0, 0, 0)
    delayMinus.Text = "-"
    delayMinus.Font = Enum.Font.GothamBold
    delayMinus.TextSize = 18
    delayMinus.BackgroundColor3 = Color3.fromRGB(72,72,72)
    delayMinus.TextColor3 = Color3.fromRGB(255,255,255)
    local delayMinusCorner = Instance.new("UICorner") delayMinusCorner.Parent = delayMinus

    local delayPlus = Instance.new("TextButton") delayPlus.Parent = delayControls
    delayPlus.Size = UDim2.new(0, 32, 1, 0)
    delayPlus.Position = UDim2.new(1, -32, 0, 0)
    delayPlus.Text = "+"
    delayPlus.Font = Enum.Font.GothamBold
    delayPlus.TextSize = 18
    delayPlus.BackgroundColor3 = Color3.fromRGB(72,72,72)
    delayPlus.TextColor3 = Color3.fromRGB(255,255,255)
    local delayPlusCorner = Instance.new("UICorner") delayPlusCorner.Parent = delayPlus

    local chanceLabel = Instance.new("TextLabel") chanceLabel.Parent = rightCol
    chanceLabel.Size = UDim2.new(1, 0, 0, 18)
    chanceLabel.Position = UDim2.new(0, 0, 0, 58)
    chanceLabel.BackgroundTransparency = 1
    chanceLabel.Text = string.format("Safe Perfect %%: %d", Config.safeModeChance)
    chanceLabel.Font = Enum.Font.GothamSemibold
    chanceLabel.TextSize = 13
    chanceLabel.TextColor3 = Color3.fromRGB(200,200,200)
    chanceLabel.TextXAlignment = Enum.TextXAlignment.Left

    local chanceControls = Instance.new("Frame") chanceControls.Parent = rightCol
    chanceControls.Size = UDim2.new(1, 0, 0, 28)
    chanceControls.Position = UDim2.new(0, 0, 0, 82)
    chanceControls.BackgroundTransparency = 1

    local chanceMinus = Instance.new("TextButton") chanceMinus.Parent = chanceControls
    chanceMinus.Size = UDim2.new(0, 32, 1, 0)
    chanceMinus.Position = UDim2.new(0, 0, 0, 0)
    chanceMinus.Text = "-"
    chanceMinus.Font = Enum.Font.GothamBold
    chanceMinus.TextSize = 18
    chanceMinus.BackgroundColor3 = Color3.fromRGB(72,72,72)
    chanceMinus.TextColor3 = Color3.fromRGB(255,255,255)
    local chanceMinusCorner = Instance.new("UICorner") chanceMinusCorner.Parent = chanceMinus

    local chancePlus = Instance.new("TextButton") chancePlus.Parent = chanceControls
    chancePlus.Size = UDim2.new(0, 32, 1, 0)
    chancePlus.Position = UDim2.new(1, -32, 0, 0)
    chancePlus.Text = "+"
    chancePlus.Font = Enum.Font.GothamBold
    chancePlus.TextSize = 18
    chancePlus.BackgroundColor3 = Color3.fromRGB(72,72,72)
    chancePlus.TextColor3 = Color3.fromRGB(255,255,255)
    local chancePlusCorner = Instance.new("UICorner") chancePlusCorner.Parent = chancePlus

    -- Bottom action buttons
    local actions = Instance.new("Frame") actions.Parent = panel
    actions.Size = UDim2.new(1, -20, 0, 42)
    actions.Position = UDim2.new(0, 10, 1, -50)
    actions.BackgroundTransparency = 1

    local startBtn = Instance.new("TextButton") startBtn.Parent = actions
    startBtn.Size = UDim2.new(0.5, -6, 1, 0)
    startBtn.Position = UDim2.new(0, 0, 0, 0)
    startBtn.Text = "Start"
    startBtn.Font = Enum.Font.GothamBold
    startBtn.TextSize = 16
    startBtn.BackgroundColor3 = Color3.fromRGB(50,150,200)
    startBtn.TextColor3 = Color3.fromRGB(255,255,255)
    local startCorner = Instance.new("UICorner") startCorner.Parent = startBtn

    local stopBtn = Instance.new("TextButton") stopBtn.Parent = actions
    stopBtn.Size = UDim2.new(0.5, -6, 1, 0)
    stopBtn.Position = UDim2.new(0.5, 12, 0, 0)
    stopBtn.Text = "Stop"
    stopBtn.Font = Enum.Font.GothamBold
    stopBtn.TextSize = 16
    stopBtn.BackgroundColor3 = Color3.fromRGB(160,60,60)
    stopBtn.TextColor3 = Color3.fromRGB(255,255,255)
    local stopCorner = Instance.new("UICorner") stopCorner.Parent = stopBtn

    -- Callbacks (preserve original behavior)
    fastButton.MouseButton1Click:Connect(function()
        Config.mode = "fast"
        Notify("modern_autofish", "Mode set to FAST")
    end)
    secureButton.MouseButton1Click:Connect(function()
        Config.mode = "secure"
        Notify("modern_autofish", "Mode set to SECURE")
    end)

    -- minimize behavior
    local origPanelSize = panel.Size
    local minimized = false
    minimizeBtn.MouseButton1Click:Connect(function()
        minimized = not minimized
        if minimized then
            content.Visible = false
            actions.Visible = false
            panel.Size = UDim2.new(0, 380, 0, 60)
        else
            content.Visible = true
            actions.Visible = true
            panel.Size = origPanelSize
        end
    end)

    -- floating button: toggles panel visibility
    local floatBtn = Instance.new("TextButton")
    floatBtn.Name = "FloatToggle"
    floatBtn.Size = UDim2.new(0, 44, 0, 44)
    floatBtn.Position = UDim2.new(0, 8, 0, 8)
    floatBtn.AnchorPoint = Vector2.new(0,0)
    floatBtn.BackgroundColor3 = Color3.fromRGB(40,40,46)
    floatBtn.Text = "≡"
    floatBtn.Font = Enum.Font.GothamBold
    floatBtn.TextSize = 20
    floatBtn.TextColor3 = Color3.fromRGB(235,235,235)
    floatBtn.Parent = screenGui
    local floatCorner = Instance.new("UICorner") floatCorner.Parent = floatBtn

    floatBtn.MouseButton1Click:Connect(function()
        panel.Visible = not panel.Visible
    end)

    -- close behavior: stop autofish and remove UI
    closeBtn.MouseButton1Click:Connect(function()
        Config.enabled = false
        sessionId = sessionId + 1
        Notify("modern_autofish", "ModernAutoFish closed")
        -- destroy UI
        if screenGui and screenGui.Parent then
            screenGui:Destroy()
        end
    end)

    startBtn.MouseButton1Click:Connect(function()
        if Config.enabled then
            Notify("modern_autofish", "Already running")
            return
        end
        Config.enabled = true
        sessionId = sessionId + 1
        task.spawn(function() AutofishRunner(sessionId) end)
    end)

    stopBtn.MouseButton1Click:Connect(function()
        Config.enabled = false
        sessionId = sessionId + 1
    end)

    delayMinus.MouseButton1Click:Connect(function()
        Config.autoRecastDelay = math.max(0.05, Config.autoRecastDelay - 0.1)
        delayLabel.Text = string.format("Recast Delay: %.2fs", Config.autoRecastDelay)
    end)
    delayPlus.MouseButton1Click:Connect(function()
        Config.autoRecastDelay = Config.autoRecastDelay + 0.1
        delayLabel.Text = string.format("Recast Delay: %.2fs", Config.autoRecastDelay)
    end)

    chanceMinus.MouseButton1Click:Connect(function()
        Config.safeModeChance = math.max(0, Config.safeModeChance - 5)
        chanceLabel.Text = string.format("Safe Perfect %%: %d", Config.safeModeChance)
    end)
    chancePlus.MouseButton1Click:Connect(function()
        Config.safeModeChance = math.min(100, Config.safeModeChance + 5)
        chanceLabel.Text = string.format("Safe Perfect %%: %d", Config.safeModeChance)
    end)

    Notify("modern_autofish", "UI ready - Select mode and press Start")
end
        local elapsed = 0
        while elapsed < delay do
            if not Config.enabled or sessionId ~= mySession then break end
            task.wait(0.05)
            elapsed = elapsed + 0.05
        end
    end
    Notify("modern_autofish", "AutoFishing stopped")
end

-- Create minimal modern UI (ScreenGui) with Controls
local function BuildUI()
    local playerGui = LocalPlayer:WaitForChild("PlayerGui")
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "ModernAutoFishUI"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = playerGui

    local frame = Instance.new("Frame")
    frame.Name = "Panel"
    frame.Size = UDim2.new(0, 360, 0, 180)
    frame.Position = UDim2.new(0, 20, 0, 80)
    frame.AnchorPoint = Vector2.new(0,0)
    frame.BackgroundColor3 = Color3.fromRGB(30,30,35)
    frame.BorderSizePixel = 0
    frame.Parent = screenGui

    local uiCorner = Instance.new("UICorner") uiCorner.Parent = frame

    local title = Instance.new("TextLabel")
    title.Parent = frame
    title.Size = UDim2.new(1, -20, 0, 28)
    title.Position = UDim2.new(0, 10, 0, 8)
    title.BackgroundTransparency = 1
    title.Text = "Modern AutoFish"
    title.Font = Enum.Font.GothamBold
    title.TextSize = 18
    title.TextColor3 = Color3.fromRGB(230,230,230)
    title.TextXAlignment = Enum.TextXAlignment.Left

    local modeLabel = Instance.new("TextLabel")
    modeLabel.Parent = frame
    modeLabel.Size = UDim2.new(0, 120, 0, 20)
    modeLabel.Position = UDim2.new(0, 10, 0, 42)
    modeLabel.BackgroundTransparency = 1
    modeLabel.Text = "Mode:"
    modeLabel.Font = Enum.Font.SourceSans
    modeLabel.TextSize = 14
    modeLabel.TextColor3 = Color3.fromRGB(200,200,200)
    modeLabel.TextXAlignment = Enum.TextXAlignment.Left

    local modeDropdown = Instance.new("TextButton")
    modeDropdown.Parent = frame
    modeDropdown.Size = UDim2.new(0, 200, 0, 26)
    modeDropdown.Position = UDim2.new(0, 130, 0, 38)
    modeDropdown.Text = Config.mode
    modeDropdown.Font = Enum.Font.SourceSans
    modeDropdown.TextSize = 14
    modeDropdown.BackgroundColor3 = Color3.fromRGB(45,45,50)
    modeDropdown.TextColor3 = Color3.fromRGB(230,230,230)

    local fastButton = Instance.new("TextButton") fastButton.Parent = frame
    fastButton.Size = UDim2.new(0, 100, 0, 26)
    fastButton.Position = UDim2.new(0, 10, 0, 70)
    fastButton.Text = "Fast Mode"
    fastButton.Font = Enum.Font.SourceSans
    fastButton.TextSize = 14
    fastButton.BackgroundColor3 = Color3.fromRGB(70,70,120)
    fastButton.TextColor3 = Color3.fromRGB(255,255,255)

    local secureButton = Instance.new("TextButton") secureButton.Parent = frame
    secureButton.Size = UDim2.new(0, 120, 0, 26)
    secureButton.Position = UDim2.new(0, 120, 0, 70)
    secureButton.Text = "Secure Mode"
    secureButton.Font = Enum.Font.SourceSans
    secureButton.TextSize = 14
    secureButton.BackgroundColor3 = Color3.fromRGB(70,120,70)
    secureButton.TextColor3 = Color3.fromRGB(255,255,255)

    local startBtn = Instance.new("TextButton") startBtn.Parent = frame
    startBtn.Size = UDim2.new(0, 160, 0, 34)
    startBtn.Position = UDim2.new(0, 10, 1, -44)
    startBtn.AnchorPoint = Vector2.new(0,0)
    startBtn.Text = "Start"
    startBtn.Font = Enum.Font.GothamBold
    startBtn.TextSize = 16
    startBtn.BackgroundColor3 = Color3.fromRGB(50,150,200)
    startBtn.TextColor3 = Color3.fromRGB(255,255,255)

    local stopBtn = Instance.new("TextButton") stopBtn.Parent = frame
    stopBtn.Size = UDim2.new(0, 160, 0, 34)
    stopBtn.Position = UDim2.new(1, -170, 1, -44)
    stopBtn.AnchorPoint = Vector2.new(0,0)
    stopBtn.Text = "Stop"
    stopBtn.Font = Enum.Font.GothamBold
    stopBtn.TextSize = 16
    stopBtn.BackgroundColor3 = Color3.fromRGB(160,60,60)
    stopBtn.TextColor3 = Color3.fromRGB(255,255,255)

    -- Sliders as simple buttons + labels
    local delayLabel = Instance.new("TextLabel") delayLabel.Parent = frame
    delayLabel.Size = UDim2.new(0, 160, 0, 20)
    delayLabel.Position = UDim2.new(0,10,0,104)
    delayLabel.BackgroundTransparency = 1
    delayLabel.Text = string.format("Recast Delay: %.2fs", Config.autoRecastDelay)
    delayLabel.Font = Enum.Font.SourceSans
    delayLabel.TextSize = 14
    delayLabel.TextColor3 = Color3.fromRGB(200,200,200)
    delayLabel.TextXAlignment = Enum.TextXAlignment.Left

    local delayMinus = Instance.new("TextButton") delayMinus.Parent = frame
    delayMinus.Size = UDim2.new(0,28,0,20)
    delayMinus.Position = UDim2.new(0,180,0,104)
    delayMinus.Text = "-"
    delayMinus.Font = Enum.Font.SourceSansBold
    delayMinus.TextSize = 18
    delayMinus.BackgroundColor3 = Color3.fromRGB(70,70,70)
    delayMinus.TextColor3 = Color3.fromRGB(255,255,255)

    local delayPlus = Instance.new("TextButton") delayPlus.Parent = frame
    delayPlus.Size = UDim2.new(0,28,0,20)
    delayPlus.Position = UDim2.new(0,214,0,104)
    delayPlus.Text = "+"
    delayPlus.Font = Enum.Font.SourceSansBold
    delayPlus.TextSize = 18
    delayPlus.BackgroundColor3 = Color3.fromRGB(70,70,70)
    delayPlus.TextColor3 = Color3.fromRGB(255,255,255)

    local chanceLabel = Instance.new("TextLabel") chanceLabel.Parent = frame
    chanceLabel.Size = UDim2.new(0, 240, 0, 20)
    chanceLabel.Position = UDim2.new(0,10,0,126)
    chanceLabel.BackgroundTransparency = 1
    chanceLabel.Text = string.format("Safe Perfect %%: %d", Config.safeModeChance)
    chanceLabel.Font = Enum.Font.SourceSans
    chanceLabel.TextSize = 14
    chanceLabel.TextColor3 = Color3.fromRGB(200,200,200)
    chanceLabel.TextXAlignment = Enum.TextXAlignment.Left

    local chanceMinus = Instance.new("TextButton") chanceMinus.Parent = frame
    chanceMinus.Size = UDim2.new(0,28,0,20)
    chanceMinus.Position = UDim2.new(0,180,0,126)
    chanceMinus.Text = "-"
    chanceMinus.Font = Enum.Font.SourceSansBold
    chanceMinus.TextSize = 18
    chanceMinus.BackgroundColor3 = Color3.fromRGB(70,70,70)
    chanceMinus.TextColor3 = Color3.fromRGB(255,255,255)

    local chancePlus = Instance.new("TextButton") chancePlus.Parent = frame
    chancePlus.Size = UDim2.new(0,28,0,20)
    chancePlus.Position = UDim2.new(0,214,0,126)
    chancePlus.Text = "+"
    chancePlus.Font = Enum.Font.SourceSansBold
    chancePlus.TextSize = 18
    chancePlus.BackgroundColor3 = Color3.fromRGB(70,70,70)
    chancePlus.TextColor3 = Color3.fromRGB(255,255,255)

    -- Button callbacks
    fastButton.MouseButton1Click:Connect(function()
        Config.mode = "fast"
        modeDropdown.Text = Config.mode
        Notify("modern_autofish", "Mode set to FAST")
    end)
    secureButton.MouseButton1Click:Connect(function()
        Config.mode = "secure"
        modeDropdown.Text = Config.mode
        Notify("modern_autofish", "Mode set to SECURE")
    end)

    startBtn.MouseButton1Click:Connect(function()
        if Config.enabled then
            Notify("modern_autofish", "Already running")
            return
        end
        Config.enabled = true
        sessionId = sessionId + 1
        task.spawn(function() AutofishRunner(sessionId) end)
    end)

    stopBtn.MouseButton1Click:Connect(function()
        Config.enabled = false
        sessionId = sessionId + 1
    end)

    delayMinus.MouseButton1Click:Connect(function()
        Config.autoRecastDelay = math.max(0.05, Config.autoRecastDelay - 0.1)
        delayLabel.Text = string.format("Recast Delay: %.2fs", Config.autoRecastDelay)
    end)
    delayPlus.MouseButton1Click:Connect(function()
        Config.autoRecastDelay = Config.autoRecastDelay + 0.1
        delayLabel.Text = string.format("Recast Delay: %.2fs", Config.autoRecastDelay)
    end)

    chanceMinus.MouseButton1Click:Connect(function()
        Config.safeModeChance = math.max(0, Config.safeModeChance - 5)
        chanceLabel.Text = string.format("Safe Perfect %%: %d", Config.safeModeChance)
    end)
    chancePlus.MouseButton1Click:Connect(function()
        Config.safeModeChance = math.min(100, Config.safeModeChance + 5)
        chanceLabel.Text = string.format("Safe Perfect %%: %d", Config.safeModeChance)
    end)

    Notify("modern_autofish", "UI ready - Select mode and press Start")
end

-- Build UI and ready
BuildUI()

-- Expose quick API on _G for convenience
_G.ModernAutoFish = {
    Start = function() if not Config.enabled then Config.enabled = true; sessionId = sessionId + 1; task.spawn(function() AutofishRunner(sessionId) end) end end,
    Stop = function() Config.enabled = false; sessionId = sessionId + 1 end,
    SetMode = function(m) if m == "fast" or m == "secure" then Config.mode = m end end,
    Config = Config
}

print("modern_autofish loaded - UI created and API available via _G.ModernAutoFish")
